#!/bin/bash
# check for any apt-packages that need update, if
# there are ones send a mail

# for commands that must run as root,don't sudo as root
if [ $UID != 0 ]; then
	sudo=sudo
else
	sudo=
fi

while [ "${1:0:1}" = "-" ]
	do
	case $1 in
		-h|--help)
			cat <<-EOI>&2
			usage: $bn [-t [ # ]][ recipient [ mail-prog ]]
			  -t         test-mode [ #pkgs reported ]
			  recipient  mail address to send mails to
			             default is root
			  mailprog   program used to send mail
		             default is mutt
			  -u         first run "apt update" (using sudo if uid!=0)
			EOI
			exit
			;;
# test-mode: assume there are packages to upgrade,
# you may specify the number of packages after -t,
# if you don't we will make it 99999
		-t)
			if [[ $2 =~ ^[0-9]+$ ]]; then
  			cntadd=$2
				shift
			else
				cntadd=99999
			fi
			faked="faked "
			;;
		-u)
			# update apt cache
			$sudo apt update
			;;
		*)
			echo "option $1 unknown" >&2
			exit 1
			;;
	esac
	shift
	done

# mail recipient and program
mailto=${1:-$USER}
mailer=${2:-mutt}

# our name
bn=$(basename $0)

# create a temporary file and make sure to clean it up
tmpf=$(mktemp /tmp/$bn-XXXXXXXY.tmp)
trap "rm -rf $tmpf" SIGINT SIGSTOP EXIT

# list upgradadeable packages and determine the count
(( cntupg=$(apt list --upgradeable 2>/dev/null|tee -a $tmpf|wc -l)-1 + cntadd))

# send mail about upgraded packages, if there are ones
if [ $cntupg -gt 0 ]; then
	 $mailer -s "$bn: There are $cntupg ${faked}packages to upgrade" "$mailto" < $tmpf
fi
exit # Removes $tmpf due to trap!
