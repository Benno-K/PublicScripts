#!/bin/bash
# chron - list crontab entries sorted by time (HH:MM), normalizing unspecific times
# Usage: ./chron <user>
# - shows full cron lines
# - times like *, */5, ranges are displayed as !??:??
# - single numeric times normalized with leading zeros
# - sorted by time, unspecific times at the end

if [[ "$1" == "-h" || "$1" == "--help" || -z "$1" ]]; then
    echo "Usage: $0 <username>"
    exit 0
fi

user="$1"

# Determine cron input
if crontab -u "$user" -l &>/dev/null; then
    cronContent=$(crontab -u "$user" -l)
elif [[ -f "/etc/cron.d/$user" ]]; then
    cronContent=$(grep -vE '^\s*#|^\s*$' "/etc/cron.d/$user")
else
    echo "No crontab found for user '$user'"
    exit 1
fi

process_line() {
    line="$1"

    # Skip empty or comment lines
    [[ "$line" =~ ^[[:space:]]*# || -z "$line" ]] && return

    # Extract fields
    read -r min hour dom mon dow rest <<<"$line"

    # Determine display time
    if [[ "$min" =~ ^[0-9]+$ && "$hour" =~ ^[0-9]+$ ]]; then
        # Both numeric, pad with leading zeros
        dispTime=$(printf "%02d:%02d" "$hour" "$min")
    else
        dispTime="!??:??"
    fi

    # Output normalized line
    echo -e "$dispTime\t$line"
}

# Process all lines
output=""
while IFS= read -r line; do
    processed=$(process_line "$line")
    [[ -n "$processed" ]] && output+="$processed"$'\n'
done <<< "$cronContent"

# Sort output: numeric HH:MM first, then !??:?? at end
echo -e "Time\tUser\tCommand"
echo "$output" | sort -k1,1V -k2,2 -k3,3

