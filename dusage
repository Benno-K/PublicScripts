#!/usr/bin/perl

use strict;
use warnings;

use Data::Dumper;

my $tocheck = "/ /boot /data /ssd";
my $lastfile = "$ENV{'HOME'}/.dusagedf";
my $limitsfile = "$ENV{'HOME'}/.dusagelimits";
my $tstr;
if ( -e $lastfile ) {
	my $ts = (stat($lastfile))[9];
	$tstr = localtime($ts);
} else {
	$tstr = "unknown";
}
my $doupdate = 0;
my %res;
my %lastdf;
my %limits = (
	"default" => {
		low => 2,
		high => 2,
	},
	"/" => {
		low => 3,
		high => 1,
	},
	"/ssd" => {
		low => 5,
		high => 5,
	},
);
sub readlimits() {
open LF,"<$limitsfile";
local $/;
my $all = (<LF>);
close LF;
eval($all);
}

sub writelast () {
	open(OUT,">$lastfile") || die "Error opening $lastfile ($!)";
	print(OUT Data::Dumper->Dump([\%res],[ qw(*lastdf) ]));
	close(OUT);
}

sub dodf {
	my %retval;
	open(DF,"df -m --output=target,size,used,avail,pcent $tocheck|");
	<DF>;
	while(<DF>) {
		my ($mp,$size,$used,$avail,$pcent) = split;
		$retval{$mp}{size} = $size;
		$retval{$mp}{used} = $used;
		$retval{$mp}{avail} = $avail;
		$retval{$mp}{pcent} = substr($pcent,0,-1);
	}
	close(DF);
	return(%retval);
}

readlimits();
%res = dodf();
open DF,"<$lastfile";
local $/;
my $all = (<DF>);
close DF;
eval($all);
for my $k (sort keys %lastdf) {
	my ($lowlim,$highlim);
	if (defined($limits{$k}{low})) {
		$lowlim = $limits{$k}{low};
		$highlim = $limits{$k}{high};
	} else {
		$lowlim = $limits{"default"}{low};
		$highlim = $limits{"default"}{high};
	}
			my $absdiff = int($lastdf{$k}{pcent})-int($res{$k}{pcent});
#			printf "ad=%d\n",$absdiff;
	if (	-($lastdf{$k}{pcent} -
				$res{$k}{pcent}) >
				$lowlim ) {
					printf("decrease: %5s %d%% (lim:-%s%%)\n",$k,$absdiff,$lowlim);
					printf("  sua %6s %6s %6s\n",$res{$k}{size},$res{$k}{used},$res{$k}{avail});
					printf("   since:  %s\n",$tstr);
					$doupdate = 1;
				}
	if (	($lastdf{$k}{pcent} -
				$res{$k}{pcent}) >
				$highlim ) {
					printf("increase: %5s %d%% (lim:%s%%)\n",$k,$absdiff,$highlim);
					printf("  sua %6s %6s %6s\n",$res{$k}{size},$res{$k}{used},$res{$k}{avail});
					printf("   since:  %s\n",$tstr);
					$doupdate = 1;
				}
}
if ( $doupdate == 1) {
	writelast();
}
exit(0)
