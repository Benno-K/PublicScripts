#!/bin/bash

thr=5
stateFile="$HOME/.$(basename "$0").state"
declare -A fsStates
declare -A fsDates
quiet=0

while getopts "t:q" opt; do
  case $opt in
    t) thr="$OPTARG" ;;
    q) quiet=1 ;;
    \?) echo "Invalid option: -$OPTARG" >&2; exit 1 ;;
    :) echo "Option -$OPTARG requires an argument." >&2; exit 1 ;;
  esac
done

shift $((OPTIND - 1))

if [ $# -eq 0 ]; then
  echo "Usage: $0 [-t threshold] [-q] filesystem1 filesystem2 ..."
  exit 1
fi

getUsage() { df -P "$1" | awk 'NR==2 {print $5, $4, $3}'; }

loadState() {
  if [ -f "$stateFile" ]; then
    while IFS='=' read -r key value; do
      if [[ $key =~ ^initial_percent_(.+)$ ]]; then
        fsKey="${BASH_REMATCH[1]}"
        fsStates["$fsKey"]="${value%%|*}"
        fsDates["$fsKey"]="${value#*|}"
      fi
    done < "$stateFile"
  fi
}

saveState() {
  rm -f "$stateFile"
  for fs in "$@"; do
    safeFs=$(echo "$fs" | sed 's/[^a-zA-Z0-9_]/_/g')
    safeFs="FS_${safeFs}"
    percent="${fsStates["$safeFs"]}"
    dt="${fsDates["$safeFs"]}"
    [ -n "$percent" ] && [ -n "$dt" ] && printf "initial_percent_%s=%s|%s\n" "$safeFs" "$percent" "$dt" >> "$stateFile"
  done
}

loadState

for fs in "$@"; do
  safeFs=$(echo "$fs" | sed 's/[^a-zA-Z0-9_]/_/g')
  safeFs="FS_${safeFs}"

  usage=$(getUsage "$fs")
  percent=$(echo "$usage" | awk '{print substr($1, 1, length($1)-1)}')
  free=$(echo "$usage" | awk '{print $2}')
  used=$(echo "$usage" | awk '{print $3}')

  now=$(date +"%d.%m.%y/%H.%M")

  initialPercent="${fsStates["$safeFs"]:-0}"
  initialDate="${fsDates["$safeFs"]:-$now}"

  if [ "$initialPercent" = "0" ]; then
    echo "Initial usage for $fs: $percent% used, $free free, $used used (recorded at $now, triggered at $now)"
    updateState=1
  else
    if [ "$quiet" -eq 0 ]; then
      echo "Previous usage for $fs: $initialPercent% used (recorded at $initialDate, triggered at $now)"
    fi
    updateState=0
  fi

  diff=$((percent - initialPercent))
  absDiff=$((diff < 0 ? -diff : diff))

  if ((absDiff > thr)); then
    echo "Filesystem $fs usage has changed beyond threshold of $thr% (since $initialDate, triggered at $now)"
    echo "  Previous usage: $initialPercent%"
    echo "  Current usage: $percent%"
    echo "  Free space: $free"
    echo "  Used space: $used"
    echo "  Previous value recorded at: $initialDate"
    echo "  Triggered at: $now"
    updateState=1
  fi

  if [ "$updateState" -eq 1 ]; then
    fsStates["$safeFs"]="$percent"
    fsDates["$safeFs"]="$now"
  fi
done

saveState "$@"
