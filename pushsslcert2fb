#!/bin/bash

# Upload tn SSL/TLS cert
# to FRITZbox
# Useful for regularly
# updated certificated like
# those from "Let's Encrypt"
# as they expire within months.
# Let' Encrypt provides a
# script named getssl to
# check and automatically
# download a re-newed cert.
# When a new cert is 
# downloaded for a domain
# a command can be executed.
# Mostly these commands just
# reload the webserver so 
# it uses the new cert.
# THIS script here can be used
# whenever there is s new cert
# for the domain of your 
# FRITZ!box, so if you invoke
# it via the getssl.conf of
# your domain, your FRITZ!box
# will get the new cert as 
# soon as it is available.

##
# Author: Benno K.
# Email: benno@xyz.de
# Github: https://www.github.com/Benno-K
# 
# This script is available for
# public use under GPL V3 (see
# file LICENSE)
##

# Variable
USERNAME="logfetch"
CERTNAME="fbx.kardel.eu"
CERTPATH="/root/.getssl/${CERTNAME}"
CERTPASSWORD=""
HOST=http://fritz.box
KEYFILE=${CERTNAME}.key
CHAINFILE=chain.crt
CERTFILE=${CERTNAME}.crt
# Login credentials (encrypted
# password of user above on
# FRITZ!box - saved with
# script fbpwdsave)
credfil=~pi/.fblogcred.logfetch
# Define variable keycc
. ~pi/.fblogsrc
# contains sth. like this
# keycc="UmVnbXN0cmllcnVuZ3Nwcm96ZXNzOdfCpysK"

# make and secure a temporary file
TMP="$(mktemp -t XXXXXX)"
chmod 600 $TMP

# login to the box and get a valid SID
CHALLENGE=`wget -q -O - $HOST/login_sid.lua | sed -e 's/^.*<Challenge>//' -e 's/<\/Challenge>.*$//'`
HASH="`echo -n $CHALLENGE-$(ccat -K "$keycc" $credfil) | iconv -f ASCII -t UTF16LE |md5sum|awk '{print $1}'`"
SID=`wget -q -O - "$HOST/login_sid.lua?sid=0000000000000000&username=$USERNAME&response=$CHALLENGE-$HASH"| sed -e 's/^.*<SID>//' -e 's/<\/SID>.*$//'`

# generate our upload request
BOUNDARY="---------------------------"`date +%Y%m%d%H%M%S`
printf -- "--$BOUNDARY\r\n" >> $TMP
printf "Content-Disposition: form-data; name=\"sid\"\r\n\r\n$SID\r\n" >> $TMP
printf -- "--$BOUNDARY\r\n" >> $TMP
printf "Content-Disposition: form-data; name=\"BoxCertPassword\"\r\n\r\n$CERTPASSWORD\r\n" >> $TMP
printf -- "--$BOUNDARY\r\n" >> $TMP
printf "Content-Disposition: form-data; name=\"BoxCertImportFile\"; filename=\"BoxCert.pem\"\r\n" >> $TMP
printf "Content-Type: application/octet-stream\r\n\r\n" >> $TMP
cat $CERTPATH/$CERTFILE >> $TMP
cat $CERTPATH/$KEYFILE >> $TMP
cat $CERTPATH/$CHAINFILE >> $TMP
printf "\r\n" >> $TMP
printf -- "--$BOUNDARY--" >> $TMP

exitwith=0
# upload the certificate to the box
wget -q -O - $HOST/cgi-bin/firmwarecfg --header="Content-type: multipart/form-data boundary=$BOUNDARY" --post-file $TMP | grep SSL
if [ $? != 0 ]; then
  echo "Failed to upload certificate to FRITZ!box"
  exitwith=1
fi  

# clean up
rm -f $TMP
exit $exitwith
